<?xml version="1.0" ?>
<SmellBaseline>
  <Blacklist></Blacklist>
  <Whitelist>
    <ID>MagicNumber:ExceptionsErrorCodeFunctions.kt$3</ID>
    <ID>MagicNumber:ExceptionsErrorCodeFunctions.kt$36</ID>
    <ID>MaxLineLength:Constants.kt$/** * constants in this file are generated by gradle * to change this file, edit src/main/template/kotlin/net/corda/common/logging/Constants.kt * the generated file does not need to be committed to source control (originally added to source control for ease of use) */ internal const val CURRENT_MAJOR_RELEASE = "4.3-SNAPSHOT"</ID>
    <ID>MaxLineLength:CordaVersion.kt$CordaVersion$arrayOf("Version: $releaseVersion", "Revision: $revision", "Platform Version: $platformVersion", "Vendor: $vendor")</ID>
    <ID>MaxLineLength:CordaVersion.kt$CordaVersion.Companion$internal val semanticVersion: String by lazy { if(releaseVersion == UNKNOWN) CURRENT_MAJOR_RELEASE else releaseVersion }</ID>
    <ID>MaxLineLength:ErrorCodeRewritePolicy.kt$ErrorCodeRewritePolicy$@Plugin(name = "ErrorCodeRewritePolicy", category = Core.CATEGORY_NAME, elementType = "rewritePolicy", printObject = false)</ID>
    <ID>MaxLineLength:ExceptionsErrorCodeFunctions.kt$CompositeMessage$private</ID>
    <ID>MaxLineLength:ExceptionsErrorCodeFunctions.kt$cause != null &amp;&amp; !visited.contains(cause) -&gt; Objects.hash(*fields, cause.staticLocationBasedHash(hashedFields, visited + cause))</ID>
    <ID>MaxLineLength:ExceptionsErrorCodeFunctions.kt$error != null &amp;&amp; level.isInRange(Level.FATAL, Level.WARN) -&gt; CompositeMessage("$formattedMessage [errorCode=${error.errorCode()}, moreInformationAt=${error.errorCodeLocationUrl()}]", format, parameters, throwable)</ID>
    <ID>MaxLineLength:ExceptionsErrorCodeFunctions.kt$fun Throwable.errorCodeLocationUrl()</ID>
    <ID>MaxLineLength:ExceptionsErrorCodeFunctions.kt$private</ID>
    <ID>NewLineAtEndOfFile:Constants.kt$net.corda.common.logging.Constants.kt</ID>
    <ID>NewLineAtEndOfFile:CordaVersion.kt$net.corda.common.logging.CordaVersion.kt</ID>
    <ID>NewLineAtEndOfFile:ErrorCodeRewritePolicy.kt$net.corda.common.logging.ErrorCodeRewritePolicy.kt</ID>
    <ID>NewLineAtEndOfFile:ExceptionsErrorCodeFunctions.kt$net.corda.common.logging.ExceptionsErrorCodeFunctions.kt</ID>
    <ID>SpreadOperator:ExceptionsErrorCodeFunctions.kt$(*fields)</ID>
    <ID>SpreadOperator:ExceptionsErrorCodeFunctions.kt$(*fields, cause.staticLocationBasedHash(hashedFields, visited + cause))</ID>
    <ID>SpreadOperator:ExceptionsErrorCodeFunctions.kt$(*hashedFields.invoke(this))</ID>
  </Whitelist>
</SmellBaseline>
